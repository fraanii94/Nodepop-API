<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
  </head>
  <body>
    <div>
      <h1>Bienvenido a la API de Nodepop</h1>
      <p>A continuación se muestran todas las operaciones que puedes realizar
      a través la API. La URL para acceder es la siguiente: http://localhost:3000/api/v1
      </p>
    </div>
    <div>
      <ul>

        <li><a href="#baseDatos">Iniciar Base de datos</a></li>
      </ul>
      <ul>
        <li>Autenticación</li>
        <li><a href="#autenticacion">GET /api/v1/authenticate</a></li>
      </ul>
      <ul>
        <li>Anuncios</li>
        <li><a href="#anuncios">GET /api/v1/anuncios</a></li>
        <li><a href="#anuncios/new">POST /api/v1/anuncios/new</a></li>
        <li><a href="#anuncios/delete">DELETE /api/v1/anuncios/delete</a></li>
        <li><a href="#anuncios/tags">GET /api/v1/anuncios/tags</a></li>
        <li><a href="#anuncios/:_id">GET /api/v1/anuncios/:_id</a></li>
      </ul>
      <ul>
        <li>Usuarios</li>
        <li><a href="#usuarios">GET /api/v1/usuarios</a></li>
        <li><a href="#usuarios/new">POST /api/v1/usuarios/new</a></li>
        <li><a href="#usuarios/update">PUT /api/v1/usuarios/update</a></li>
        <li><a href="#usuarios/delete">DELETE /api/v1/usuarios/delete</a></li>
        <li><a href="#usuarios/:_id">DELETE /api/v1/usuarios/delete</a></li>
      </ul>
      <ul>
        <li>Tokens</li>
        <li><a href="#tokens/new">GET /api/v1/tokens/new</a></li>

      </ul>
    </div>
    <div id="baseDatos">
      <h3>Iniciar base de datos</h3>
      <p>En la raíz del proyecto, tras haber iniciado mongod, ejecutar el comando <code>npm run installBD</code>.
      Tras esto, podremos usar <code>npm start</code> o <code>npm run start</code></p>
    </div>
    <div id="autenticacion">
      <h3>GET /api/v1/authenticate</h3>
      <p>Mediante JSON Web Token, se debe indicar el email del usuario y la contraseña. El API devolverá un token,
      que deberá ser insertado en cada petición en el header mediante la cabecera x-access-token, en el query string con
      el parámetro accessToken o en el body con el parámetro accessToken.</p>
    </div>
    <div id="anuncios">
      <h3>GET /api/v1/anuncios</h3>
      <p>Devuelve la lista de anuncios en formato JSON, ordenados por nombre ascendente, es decir
      de más nuevos a más antiguos. En caso de producirse un error, se devolvería el mensaje del error
      junto con el estado, también en formato JSON.</p>
      <p>Se puede mandar mediante query string el parámetro <code>lang=en</code> para
      recibir, en caso de error, el mensaje en inglés, o <code>lang=es</code> para recibirlos
      en castellano. Si no se especifica o no existe el idioma insertado, se devolverán los mensajes
      de error en inglés.</p>
      <p>Se pueden añadir en la query string los parámetros limit=1,start=0,sort=nombre,nombre=pepe,precio=-5,venta=true,tag=lifestyle,</p>
    </div>
    <div id="anuncios/new">
      <h3>POST /api/v1/anuncios/new</h3>
      <p>Se pueden crear anuncios insertando los valroes de los campos en el <code>body</code> de la petición</p>
    </div>
    <div id="anuncios/delete">
      <h3>DELETE /api/v1/anuncios/delete</h3>
      <p>Se pueden borrar anuncios indicando el _id en el <code>body</code> de la petición</p>
    </div>
    <div id="anuncios/tags">
      <h3>GET /api/v1/anuncios/tags</h3>
      <p>Devuelve la lista de todos los tags en formato JSON</p>
    </div>
    <div id="anuncios/:_id">
      <h3>GET /api/v1/anuncios/:_id</h3>
      <p>Devuelve el anuncio especificado por el _id en formato JSON</p>
    </div>
    <div id="usuarios">
      <h3>POST /api/v1/usuarios</h3>
      <p>Al igual que anuncios, devuelve la lista de usuarios, pueden filtrarse por los campos nombre y email</p>
    </div>
    <div id="usuarios/new">
      <h3>POST /api/v1/usuarios/new</h3>
      <p>Realiza el registro de usuario, insertando las propiedades y valores del usuario en el <code>body</code> de la
      petición</p>
    </div>
    <div id="usuarios/update">
      <h3>UPDATE /api/v1/usuarios/update</h3>
      <p>Actualiza los valores de los atributos del usuario insertándolos en el <code>body</code> de la petición</p>
    </div>
    <div id="usuarios/delete">
      <h3>DELETE /api/v1/usuarios/delete</h3>
      <p>Devuelve la lista de anuncios en formato JSON, ordenados por fecha descendente, es decir
        de más nuevos a más antiguos.</p>
    </div>
    <div id="usuarios/:_id">
      <h3>DELETE /api/v1/usuarios/delete</h3>
      <p>Devuelve el usuario especificado por el id</p>
    </div>
    <div id="tokens/new">
      <h3>POST /api/v1/tokens/new</h3>
      <p>Crea un token para enviar notificaciones push, recibiendo los parámetros en el <code>body</code> de la
      petición</p>
    </div>
  </body>
</html>
